{"version":3,"sources":["components/ContactForm/ContactForm.module.scss","components/ContactItem/ContactItem.module.scss","App.module.scss","components/Filter/Filter.module.scss","components/Container/Container.module.scss","components/ContactList/ContactList.module.scss","components/Container/Container.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","App.jsx","index.js"],"names":["module","exports","Container","children","className","styles","container","defaultProps","ContactForm","state","name","number","hanldeChange","event","currentTarget","value","setState","hanldeSubmit","preventDefault","contact","id","uuidv4","props","onSubmit","resetForm","form","this","label","type","placeholder","aria-label","input","onChange","pattern","title","required","button__wrapper","button","Component","Filter","ContactItem","onDeleteContact","item","href","onClick","ContactList","contacts","list","map","App","filter","addContact","newContact","find","alert","changeFilter","filterContacts","normalizedFilter","toLowerCase","includes","deleteContact","prevState","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","filteredResults","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8395bffd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1cFsA\",\"label\":\"ContactForm_label__2RL0L\",\"input\":\"ContactForm_input__35jaA\",\"button__wrapper\":\"ContactForm_button__wrapper__2TqPj\",\"button\":\"ContactForm_button__1IYXE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__26suR\",\"name\":\"ContactItem_name__2E6sD\",\"number\":\"ContactItem_number__3WqcS\",\"button\":\"ContactItem_button__1sAC_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__1W9ir\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3nhrb\",\"input\":\"Filter_input__1w1B_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2UkDb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3CHj_\"};","import PropTypes from 'prop-types';\nimport styles from './Container.module.scss';\n\nconst Container = ({ children }) => (\n  <div className={styles.container}>{children}</div>\n);\n\nContainer.defaultProps = {\n  children: [],\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport styles from './ContactForm.module.scss';\n\nclass ContactForm extends Component {\n  // PropTypes как статическое свойство\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  // Стейт формы\n  state = {\n    name: '',\n    number: '',\n  };\n\n  // Метод, наблюдающий за инпутами и записывающий в стейт их значения\n  hanldeChange = event => {\n    const { name, value } = event.currentTarget;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  // Метод на отправке формы. Формирует из стейта контакт и передает во внешний метод\n  hanldeSubmit = event => {\n    event.preventDefault();\n\n    const contact = {\n      id: uuidv4(),\n      name: this.state.name,\n      number: this.state.number,\n    };\n\n    this.props.onSubmit(contact); // Внешний метод в пропсах класса\n\n    this.resetForm();\n  };\n\n  // Сброс полей формы (после отправки)\n  resetForm = () => {\n    this.setState({\n      id: '',\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    return (\n      <form className={styles.form} onSubmit={this.hanldeSubmit}>\n        <label className={styles.label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Contact name\"\n            aria-label=\"Input for your name\"\n            className={styles.input}\n            value={this.state.name} // Пишем значение в стейт\n            onChange={this.hanldeChange} // Наблюдающий метод\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className={styles.label}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"Phone number\"\n            aria-label=\"Input for your phone number\"\n            className={styles.input}\n            value={this.state.number} // Пишем значение в стейт\n            onChange={this.hanldeChange} // Наблюдающий метод\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <div className={styles.button__wrapper}>\n          <button type=\"submit\" className={styles.button}>\n            Add contact\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\n\nimport styles from './Filter.module.scss';\n\n// Принимает значение с поля фильтра и метод пишущий в стейт\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={styles.label}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Find...\"\n        className={styles.input}\n        value={value}\n        onChange={onChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n      />\n    </label>\n  );\n};\n\nFilter.defaultProps = {\n  value: '',\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import styles from './ContactItem.module.scss';\n\n// Принимает один контакт и метод для удаления контакта\nconst ContactItem = ({ contact, onDeleteContact }) => {\n  return (\n    <li className={styles.item}>\n      <span className={styles.name}>{contact.name}: </span>\n      <a href={`tel:${contact.number}`} className={styles.number}>\n        {contact.number}\n      </a>\n      <button\n        className={styles.button}\n        type=\"button\"\n        onClick={() => onDeleteContact(contact.id)} // Метод на клике, принимает ID контакта\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nexport default ContactItem;\n","import PropTypes from 'prop-types';\nimport ContactItem from '../ContactItem';\n\nimport styles from './ContactList.module.scss';\n\n// Принимает все контакты и пробрасывает дальше метод для удаления контакта\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul className={styles.list}>\n      {contacts.map(contact => (\n        <ContactItem\n          contact={contact}\n          onDeleteContact={onDeleteContact}\n          key={contact.id}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import { Component } from 'react';\nimport Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nimport styles from './App.module.scss';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Doctor Who', number: '459-12-56' },\n      { id: 'id-2', name: 'Rose Tyler', number: '443-89-12' },\n      { id: 'id-3', name: 'Martha Jones', number: '645-17-79' },\n      { id: 'id-4', name: 'Donna Noble', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  // Добавляет контакт (желательно сократить или вынести)\n  addContact = newContact => {\n    // Проверка на дубликат\n    const duplicateName = this.state.contacts.find(\n      contact => contact.name === newContact.name,\n    );\n\n    if (duplicateName) {\n      alert(`${newContact.name} is already on contacts`);\n      return;\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [newContact, ...contacts],\n    }));\n  };\n\n  // Следит за полем фильтрации и пишет в стейт\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  // Фильтрует и возвращает результат фильтра\n  filterContacts = () => {\n    const { contacts, filter } = this.state;\n\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  // Удаляет контакт\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  // Не делать стрелочной!\n  // Вызывается один раз при маунте!\n  componentDidMount() {\n    // Cчитывает при маунте локальное и записывает в стейт.\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  // Не делать стрелочной!\n  // Вызывается после каждого обновления!\n  componentDidUpdate(prevState) {\n    // Сравнивает стейты, и если не равны, тогда пишет в локальное.\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const { filter } = this.state;\n    const filteredResults = this.filterContacts();\n\n    return (\n      <Container>\n        <h1 className={styles.title}>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <h2 className={styles.title}>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={filteredResults}\n          onDeleteContact={this.deleteContact}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\n\nimport 'modern-normalize/modern-normalize.css';\nimport './App.module.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}